"""create users and user permissions tables

Revision ID: dbabd2c046b5
Revises: d63603652eb0
Create Date: 2025-07-18 00:57:19.137473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dbabd2c046b5'
down_revision: Union[str, None] = 'd63603652eb0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'uuid_generate_v4()'), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('password_hash', sa.String(
                        length=255), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False,
                              server_default=sa.text('true')),
                    sa.Column('role_id', sa.UUID(), nullable=False),
                    sa.Column('password_changed', sa.Boolean(),
                              nullable=False, server_default=sa.text('false')),
                    sa.Column('created_by', sa.UUID(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False,
                              server_default=sa.func.now()),
                    sa.Column('updated_at', sa.DateTime(), nullable=False,
                              server_default=sa.func.now()),
                    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['user_roles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), [
                              'email'], unique=True)

    op.create_table('user_permissions',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'uuid_generate_v4()'), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('permission_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False,
                              server_default=sa.func.now()),
                    sa.Column('updated_at', sa.DateTime(), nullable=False,
                              server_default=sa.func.now()),
                    sa.ForeignKeyConstraint(
                        ['permission_id'], ['permissions.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id', 'permission_id',
                                        name='uix_user_permission')
                    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_permissions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
