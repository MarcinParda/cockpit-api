"""create user roles table

Revision ID: d63603652eb0
Revises: cec583e3a506
Create Date: 2025-07-18 00:34:16.208251

"""
from typing import Sequence, Union
import uuid
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'd63603652eb0'
down_revision: Union[str, None] = 'cec583e3a506'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_roles',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'uuid_generate_v4()'), nullable=False),
                    sa.Column('name', sa.String(length=50), nullable=False),
                    sa.Column('description', sa.String(
                        length=255), nullable=True),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.func.now(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(),
                              server_default=sa.func.now(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    # ### end Alembic commands ###

    # Seed default user roles
    now = datetime.now()

    user_roles = sa.table(
        'user_roles',
        sa.column('id', sa.UUID),
        sa.column('name', sa.String),
        sa.column('description', sa.String),
        sa.column('created_at', sa.DateTime),
        sa.column('updated_at', sa.DateTime)
    )

    op.bulk_insert(user_roles, [
        {
            'id': str(uuid.uuid4()),
            'name': 'Admin',
            'description': 'Full system access with all permissions',
            'created_at': now,
            'updated_at': now
        },
        {
            'id': str(uuid.uuid4()),
            'name': 'User',
            'description': 'Standard user access with assigned permissions',
            'created_at': now,
            'updated_at': now
        },
        {
            'id': str(uuid.uuid4()),
            'name': 'TestUser',
            'description': 'Limited access for testing purposes',
            'created_at': now,
            'updated_at': now
        }
    ])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    # ### end Alembic commands ###
