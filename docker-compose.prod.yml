services:
  cockpit_db:
    image: postgres:15-alpine
    container_name: cockpit_db_prod
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - cockpit_postgres_data_prod:/var/lib/postgresql/data
    networks:
      - cockpit_network_prod
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

  cockpit_api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cockpit_api_prod
    env_file:
      - .env
    environment:
      - DB_HOST=cockpit_db
    ports:
      - '8000:8000'
    depends_on:
      cockpit_db:
        condition: service_healthy
    networks:
      - cockpit_network_prod
    restart: always

networks:
  cockpit_network_prod:
    driver: bridge

volumes:
  cockpit_postgres_data_prod:
